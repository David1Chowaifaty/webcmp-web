{"version":3,"file":"cm-checkbox.js","sourceRoot":"","sources":["../../../src/components/cm-checkbox/cm-checkbox.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAgB,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAO9E,MAAM,OAAO,UAAU;;;;;;mBAKsC,KAAK;;;;EAIhE,YAAY;IACV,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;EACxC,CAAC;EACD,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,gBAAgB;QACzB,cACE,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,UAAU,EACf,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,kBACvB,IAAI,CAAC,OAAO,gBACd,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,EAClD,KAAK,EAAC,IAAI,EACV,EAAE,EAAC,IAAI,EACP,KAAK,EAAC,cAAc;UAEpB,SAAG,KAAK,EAAE,SAAS,eAAc;UACjC,0BAAkB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,EAAC,mBAAmB;YACjF,WAAK,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAC,WAAW,EAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAC,4BAA4B;cAC5F,YACE,CAAC,EAAC,+WAA+W,EACjX,IAAI,EAAC,cAAc,eACT,SAAS,eACT,SAAS,GACnB,CACE,CACD,CACA;QACT,aAAO,IAAI,EAAC,UAAU,iBAAa,MAAM,EAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,GAAI;QAC3F,IAAI,CAAC,YAAY,IAAI,CACpB,aAAO,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,OAAO,IAC9B,IAAI,CAAC,YAAY,CACZ,CACT,CACG,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, EventEmitter, Host, Prop, h, Event } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'cm-checkbox',\r\n  styleUrl: 'cm-checkbox.css',\r\n  scoped: true,\r\n})\r\nexport class CmCheckbox {\r\n  @Prop({ reflect: true }) name: string;\r\n  @Prop({ reflect: true }) required: boolean;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) value: string;\r\n  @Prop({ reflect: true, mutable: true }) checked: boolean = false;\r\n  @Prop({ reflect: true }) defaultChecked: boolean;\r\n  @Prop({ reflect: true }) labelMessage: string;\r\n  @Event({ bubbles: true, composed: true }) checkedChange: EventEmitter<boolean>;\r\n  handleChange() {\r\n    this.checked = !this.checked;\r\n    this.checkedChange.emit(this.checked);\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div class=\"root-container\">\r\n          <button\r\n            type=\"button\"\r\n            role=\"checkbox\"\r\n            onClick={this.handleChange.bind(this)}\r\n            aria-checked={this.checked}\r\n            data-state={this.checked ? 'checked' : 'unchecked'}\r\n            value=\"on\"\r\n            id=\"c1\"\r\n            class=\"CheckboxRoot\"\r\n          >\r\n            <p class={'sr-only'}>checkbox</p>\r\n            <span data-state={this.checked ? 'checked' : 'unchecked'} class=\"CheckboxIndicator\">\r\n              <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\r\n                  fill=\"currentColor\"\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </span>\r\n          </button>\r\n          <input type=\"checkbox\" aria-hidden=\"true\" tabindex=\"-1\" value=\"on\" checked={this.checked} />\r\n          {this.labelMessage && (\r\n            <label htmlFor=\"c1\" class=\"Label\">\r\n              {this.labelMessage}\r\n            </label>\r\n          )}\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}