{"file":"cm-switch2.js","mappings":";;AAAA,MAAM,WAAW,GAAG,uhDAAuhD;;MCO9hD,QAAQ;;;;;;;;;;;;EASnB,iBAAiB;IACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;GACpC;EAEO,aAAa;IACnB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;GACvC;EAED,aAAa,CAAC,KAAoB;IAChC,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;MACzB,IAAI,CAAC,aAAa,EAAE,CAAC;MACrB,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;GACF;EACD,MAAM;IACJ,QACE,EAAC,IAAI,QACH,8BAAsB,IAAI,CAAC,QAAQ,gBAAc,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,WAAW,EAAE,KAAK,EAAC,YAAY,IACzG,aACE,WAAW,EAAC,QAAQ,EACpB,IAAI,EAAC,UAAU,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,EACnC,SAAS,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GACrC,EACF,YAAM,KAAK,EAAC,aAAa,GAAQ,CAC3B,CACH,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/cm-switch/cm-switch.css?tag=cm-switch&encapsulation=scoped","src/components/cm-switch/cm-switch.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n  --switch-root-width: 36px;\r\n  --switch-root-height: 20px;\r\n  --switch-thumb-size: calc(var(--switch-root-height) - 2px);\r\n}\r\ninput {\r\n  opacity: 0;\r\n  width: 0;\r\n  height: 0;\r\n}\r\n.SwitchRoot {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: var(--switch-root-width);\r\n  height: var(--switch-root-height);\r\n  background-color: hsl(var(--input));\r\n  border-radius: 9999px;\r\n  position: relative;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n  border: 2px solid transparent;\r\n  flex-shrink: 0;\r\n}\r\n.SwitchRoot:focus-within::after {\r\n  content: '';\r\n  height: calc(var(--switch-root-height) + 6px);\r\n  width: calc(var(--switch-root-width) + 6px);\r\n  border-radius: 9999px;\r\n  position: absolute;\r\n  z-index: -1;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n  box-shadow: 0 0 0 1px hsl(var(--ring));\r\n}\r\n.SwitchRoot[data-disabled] {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.SwitchRoot[data-state='checked'] {\r\n  background-color: hsl(var(--primary));\r\n}\r\n.SwitchRoot[data-state='checked']:hover {\r\n  background-color: hsla(var(--primary), 0.8);\r\n}\r\n\r\n.SwitchThumb {\r\n  position: absolute;\r\n  width: var(--switch-thumb-size);\r\n  height: var(--switch-thumb-size);\r\n  background-color: white;\r\n  border-radius: 9999px;\r\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);\r\n  transition: transform 100ms;\r\n  transform: translateX(2px);\r\n  will-change: transform;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n.SwitchRoot[data-state='checked'] .SwitchThumb {\r\n  transform: translateX(calc(var(--switch-root-width) - 2px - var(--switch-thumb-size)));\r\n}\r\n","import { Component, Event, EventEmitter, Host, Prop, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'cm-switch',\r\n  styleUrl: 'cm-switch.css',\r\n  scoped: true,\r\n})\r\nexport class CmSwitch {\r\n  @Prop({ reflect: true }) name: string;\r\n  @Prop({ reflect: true }) required: boolean;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) value: string;\r\n  @Prop({ reflect: true, mutable: true }) checked: boolean;\r\n  @Prop({ reflect: true }) defaultChecked: boolean;\r\n  @Event({ bubbles: true, composed: true }) checkedChange: EventEmitter<boolean>;\r\n\r\n  componentWillLoad() {\r\n    this.checked = this.defaultChecked;\r\n  }\r\n\r\n  private toggleChecked() {\r\n    this.checked = !this.checked;\r\n    this.checkedChange.emit(this.checked);\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (event.key === 'Enter') {\r\n      this.toggleChecked();\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <label data-disabled={this.disabled} data-state={this.checked ? 'checked' : 'unchecked'} class=\"SwitchRoot\">\r\n          <input\r\n            placeholder=\"switch\"\r\n            type=\"checkbox\"\r\n            value={this.value}\r\n            disabled={this.disabled}\r\n            name={this.name}\r\n            required={this.required}\r\n            checked={this.checked}\r\n            onInput={() => this.toggleChecked()}\r\n            onKeyDown={e => this.handleKeyDown(e)}\r\n          />\r\n          <span class=\"SwitchThumb\"></span>\r\n        </label>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}