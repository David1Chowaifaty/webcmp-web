{"file":"cm-input2.js","mappings":";;AAAA,MAAM,UAAU,GAAG,u0BAAu0B;;MCO70B,OAAO;;;;;;;;;;;;;;;;;;;;;;;;EAqBlB,MAAM;IACJ,QACE,EAAC,IAAI,QACH,aACE,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,EAAE,EAAE,IAAI,CAAC,OAAO,EAChB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,GAAG,EAAE,IAAI,CAAC,GAAG,EACb,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,YAAY,EAAE,IAAI,CAAC,YAAY,EAC/B,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,CAAC,CAAC,MAA2B,CAAC,KAAK,CAAC,GAC1E,CACG,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/cm-input/cm-input.css?tag=cm-input&encapsulation=scoped","src/components/cm-input/cm-input.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n\r\ninput {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  height: 2.25rem;\r\n  width: 100%;\r\n  border-radius: var(--radius);\r\n  border: 1px solid hsl(var(--border));\r\n  background-color: transparent;\r\n  padding: 4px 12px;\r\n  font-size: 0.875rem;\r\n  line-height: 1.25rem;\r\n  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);\r\n  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n  transition-duration: 150ms;\r\n}\r\ninput[type='file'] {\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 0.875rem;\r\n  line-height: 1.25rem;\r\n  font-weight: 500;\r\n}\r\ninput::placeholder {\r\n  color: hsl(var(--muted-foreground));\r\n}\r\ninput:focus {\r\n  outline: none;\r\n  box-shadow: 0 0 0 calc(0px + var(--cm-ring-offset-width)) hsl(var(--ring));\r\n}\r\ninput:disabled {\r\n  cursor: not-allowed;\r\n  opacity: 0.5;\r\n}\r\n","import { Component, EventEmitter, Host, Prop, h, Event } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'cm-input',\r\n  styleUrl: 'cm-input.css',\r\n  scoped: true,\r\n})\r\nexport class CmInput {\r\n  @Prop({ reflect: true }) type: InputType;\r\n  @Prop({ reflect: true }) name: string;\r\n  @Prop({ reflect: true }) placeholder: string;\r\n  @Prop({ reflect: true }) value: string;\r\n  @Prop({ reflect: true }) inputid: string;\r\n  @Prop({ reflect: true }) class: string;\r\n  @Prop({ reflect: true }) required: boolean;\r\n  @Prop({ reflect: true }) disabled: boolean;\r\n  @Prop({ reflect: true }) readonly: boolean;\r\n  @Prop({ reflect: true }) maxlength: number;\r\n  @Prop({ reflect: true }) min: string | number;\r\n  @Prop({ reflect: true }) max: string | number;\r\n  @Prop({ reflect: true }) step: string | number;\r\n  @Prop({ reflect: true }) pattern: string;\r\n  @Prop({ reflect: true }) autocomplete: string;\r\n  @Prop({ reflect: true }) autofocus: boolean;\r\n  @Prop({ reflect: true }) size: number;\r\n  @Prop({ reflect: true }) multiple: boolean;\r\n  @Event({ bubbles: true, composed: true }) textChanged: EventEmitter<string>;\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <input\r\n          type={this.type}\r\n          name={this.name}\r\n          placeholder={this.placeholder}\r\n          value={this.value}\r\n          id={this.inputid}\r\n          class={this.class}\r\n          required={this.required}\r\n          disabled={this.disabled}\r\n          readonly={this.readonly}\r\n          maxlength={this.maxlength}\r\n          min={this.min}\r\n          max={this.max}\r\n          step={this.step}\r\n          pattern={this.pattern}\r\n          autocomplete={this.autocomplete}\r\n          autofocus={this.autofocus}\r\n          size={this.size}\r\n          multiple={this.multiple}\r\n          onChange={e => this.textChanged.emit((e.target as HTMLInputElement).value)}\r\n        />\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}